{"version":3,"file":"static/js/961.d4daf662.chunk.js","mappings":"mTACaA,EAAW,gCACXC,EAAU,mCACVC,EAAe,kCAEfC,EAAiB,mCAAG,6GAEVC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,uBAA4C,CAC7DK,OAAQ,CACNC,QAASL,EACTM,KAAM,KALmB,UAEvBC,EAFuB,6BAUrB,IAAIC,MAViB,gCAYtBD,EAAKE,KAAKC,SAZY,gCAc7BC,QAAQC,MAAR,MAd6B,yDAAH,qDAkBjBC,EAAoB,mCAAG,WAAMC,GAAN,gGAEbX,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAAsC,CACvDK,OAAQ,CACNC,QAASL,EACTe,SAAU,QACVD,MAAM,GAAD,OAAKA,GACVR,KAAM,EACNU,eAAe,KARa,UAE1BT,EAF0B,6BAaxB,IAAIC,MAboB,gCAezBD,EAAKE,KAAKC,SAfe,gCAiBhCC,QAAQC,MAAR,MAjBgC,yDAAH,sDAqBpBK,EAAgB,mCAAG,WAAOC,GAAP,gGAETf,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,kBAA+BmB,EAA/B,KAA2C,CAC5Dd,OAAQ,CACNC,QAASL,EACTe,SAAU,WALc,UAEtBR,EAFsB,6BAUpB,IAAIC,MAVgB,gCAYrBD,EAAKE,MAZgB,gCAc5BE,QAAQC,MAAR,MAd4B,yDAAH,sDAkBhBO,EAAa,mCAAG,WAAOD,GAAP,gGAENf,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,kBAA+BmB,EAA/B,aAAmD,CACpEd,OAAQ,CACNC,QAASL,EACTe,SAAU,WALW,UAEnBR,EAFmB,6BAUjB,IAAIC,MAVa,gCAYlBD,EAAKE,KAAKW,MAZQ,gCAczBT,QAAQC,MAAR,MAdyB,yDAAH,qD,6EC7DbS,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAG1D,C,sGCkCD,UAzCqB,WACnB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KACQf,GAAYgB,EAAAA,EAAAA,MAAZhB,QACFiB,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAYnB,OANEC,EAAAA,EAAAA,YAAU,WACZN,GAAW,IACPhB,EAAAA,EAAAA,IAAiBC,GAASsB,KAAKT,GAAWU,SAAQ,kBAChDR,GAAW,EADqC,GAGnD,GAAC,CAACf,IACAY,GAID,2BACIE,IAAa,SAAC,IAAD,KACf,mBAAQU,KAAK,SAASC,QAhBL,WACnBR,EAASE,EAASO,MAAMC,KACzB,EAcG,sBAEA,gBAAKC,IAAK7C,EAAAA,GAAa6B,EAAOiB,YAAaC,IAAI,MAC/C,wBAAKlB,EAAOmB,SAEZ,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAON,MAAO,CAAEC,KAAMR,EAASO,MAAMC,MAA9C,qBAEF,yBACE,SAAC,KAAD,CAAMK,GAAG,UAAUN,MAAO,CAAEC,KAAMR,EAASO,MAAMC,MAAjD,2BAGJ,SAAC,KAAD,OAlBG,IAqBR,C","sources":["apiService.js","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'e146a7a5146c0f8a3c3cd99167c5b659';\nexport const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w300';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const resp = await axios.get(`${BASE_URL}trending/movie/day?`, {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMoviesSearchQuery = async query => {\n  try {\n    const resp = await axios.get(`${BASE_URL}search/movie?`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-uk',\n        query: `${query}`,\n        page: 1,\n        include_adult: false,\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMoviesDetails = async (movieId) => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${movieId}?`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMoviesCast = async (movieId) => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${movieId}/credits?`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};","import { ColorRing } from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  );\n};","import { useParams, useNavigate, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMoviesDetails, BASE_URL_IMG } from 'apiService';\nimport { Loader } from 'components/Loader/Loader';\n\n\nconst MovieDetails = () => {\n  const [detail, setDetail] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  }\n\n  useEffect(()=> {\nsetLoading(true);\n    getMoviesDetails(movieId).then(setDetail).finally(()=> \n      setLoading(false)\n     );\n  },[movieId]);\nif (!detail) {\n  return null;\n}\n  return (\n    <div>\n       {isLoading && <Loader/>}\n      <button type='button' onClick={handleGoBack}>Go back</button>\n \n      <img src={BASE_URL_IMG+detail.poster_path} alt='' />\n      <h1>{detail.title}</h1>\n      \n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: location.state.from }}>Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location.state.from }}>Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","BASE_URL_IMG","getTrendingMovies","axios","params","api_key","page","resp","Error","data","results","console","error","getMoviesSearchQuery","query","language","include_adult","getMoviesDetails","movieId","getMoviesCast","cast","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useState","detail","setDetail","isLoading","setLoading","useParams","navigate","useNavigate","location","useLocation","useEffect","then","finally","type","onClick","state","from","src","poster_path","alt","title","to"],"sourceRoot":""}