{"version":3,"file":"static/js/247.5688658a.chunk.js","mappings":"mTACaA,EAAW,gCACXC,EAAU,mCACVC,EAAe,kCAEfC,EAAiB,mCAAG,6GAEVC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,uBAA4C,CAC7DK,OAAQ,CACNC,QAASL,EACTM,KAAM,KALmB,UAEvBC,EAFuB,6BAUrB,IAAIC,MAViB,gCAYtBD,EAAKE,KAAKC,SAZY,gCAc7BC,QAAQC,MAAR,MAd6B,yDAAH,qDAkBjBC,EAAoB,mCAAG,WAAMC,GAAN,gGAEbX,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAAsC,CACvDK,OAAQ,CACNC,QAASL,EACTe,SAAU,QACVD,MAAM,GAAD,OAAKA,GACVR,KAAM,EACNU,eAAe,KARa,UAE1BT,EAF0B,6BAaxB,IAAIC,MAboB,gCAezBD,EAAKE,KAAKC,SAfe,gCAiBhCC,QAAQC,MAAR,MAjBgC,yDAAH,sDAqBpBK,EAAgB,mCAAG,WAAOC,GAAP,gGAETf,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,kBAA+BmB,EAA/B,KAA2C,CAC5Dd,OAAQ,CACNC,QAASL,EACTe,SAAU,WALc,UAEtBR,EAFsB,6BAUpB,IAAIC,MAVgB,gCAYrBD,EAAKE,MAZgB,gCAc5BE,QAAQC,MAAR,MAd4B,yDAAH,sDAkBhBO,EAAa,mCAAG,WAAOD,GAAP,gGAENf,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,kBAA+BmB,EAA/B,aAAmD,CACpEd,OAAQ,CACNC,QAASL,EACTe,SAAU,WALW,UAEnBR,EAFmB,6BAUjB,IAAIC,MAVa,gCAYlBD,EAAKE,KAAKW,MAZQ,gCAczBT,QAAQC,MAAR,MAdyB,yDAAH,qD,mFCtC1B,UApBa,WACT,OAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOD,EAAP,KAAaE,EAAb,KACQJ,GAAYK,EAAAA,EAAAA,MAAZL,QAMZ,OALAM,EAAAA,EAAAA,YAAU,YACNL,EAAAA,EAAAA,IAAcD,GAASO,KAAKH,EAC/B,GAAE,CAACJ,KAGI,4BACJ,iCACCE,EAAKM,KAAI,SAAAC,GAAK,OACX,4BACJ,gBAAKC,IAAK3B,EAAAA,GAAa0B,EAAME,aAAcC,IAAKH,EAAMI,QACtD,uBAAIJ,EAAMI,SAFIJ,EAAMK,GADL,MAQlB,C","sources":["apiService.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'e146a7a5146c0f8a3c3cd99167c5b659';\nexport const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w300';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const resp = await axios.get(`${BASE_URL}trending/movie/day?`, {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMoviesSearchQuery = async query => {\n  try {\n    const resp = await axios.get(`${BASE_URL}search/movie?`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-uk',\n        query: `${query}`,\n        page: 1,\n        include_adult: false,\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMoviesDetails = async (movieId) => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${movieId}?`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMoviesCast = async (movieId) => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${movieId}/credits?`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMoviesCast, BASE_URL_IMG } from 'apiService';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const { movieId } = useParams();\nuseEffect(() => {\n    getMoviesCast(movieId).then(setCast);\n}, [movieId]);\n\n\nreturn (<div>\n    <h1>Cast</h1>\n    {cast.map(actor => (\n        <div key={actor.id}>\n    <img src={BASE_URL_IMG+actor.profile_path} alt={actor.name} />\n    <p>{actor.name}</p>\n    </div>)\n    )}\n\n    </div>)\n};\n\nexport default Cast;"],"names":["BASE_URL","API_KEY","BASE_URL_IMG","getTrendingMovies","axios","params","api_key","page","resp","Error","data","results","console","error","getMoviesSearchQuery","query","language","include_adult","getMoviesDetails","movieId","getMoviesCast","cast","useState","setCast","useParams","useEffect","then","map","actor","src","profile_path","alt","name","id"],"sourceRoot":""}