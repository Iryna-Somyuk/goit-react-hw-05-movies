{"version":3,"file":"static/js/691.5029a9d3.chunk.js","mappings":"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","sources":["apiService.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'e146a7a5146c0f8a3c3cd99167c5b659';\nexport const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w300';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const resp = await axios.get(`${BASE_URL}trending/movie/day?`, {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data.results;\n  } catch (error) {\n    console.error(error);\n    toast.error(\"We're sorry, something's wrong. Please try again later!\");\n  }\n};\n\nexport const getMoviesSearchQuery = async query => {\n  try {\n    const resp = await axios.get(`${BASE_URL}search/movie?`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-uk',\n        query: `${query}`,\n        page: 1,\n        include_adult: false,\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n\n    return resp.data.results;\n  } catch (error) {\n    console.error(error);\n    toast.error(\"We're sorry, something's wrong. Please try again later!\");\n  }\n};\n\nexport const getMoviesDetails = async movieId => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${movieId}?`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    console.log(resp.data);\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data;\n  } catch (error) {\n    console.error(error);\n    toast.error(\"We're sorry, something's wrong. Please try again later!\");\n  }\n};\n\nexport const getMoviesCast = async movieId => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${movieId}/credits?`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data.cast;\n  } catch (error) {\n    console.error(error);\n    toast.error(\"We're sorry, something's wrong. Please try again later!\");\n  }\n};\n\nexport const getMoviesReviews = async movieId => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?`, {\n      params: {\n        language: 'en-US',\n        api_key: API_KEY,\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data.results;\n  } catch (error) {\n    console.error(error);\n    toast.error(\"We're sorry, something's wrong. Please try again later!\");\n  }\n};\n","import { ColorRing } from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  );\n};","import styled from '@emotion/styled';\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 300px);\n  gap: 16px;\n`;\nexport const CardWrapper = styled.li`\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\nexport const CardImg = styled.img`\n  border-radius: 4px;\n`;\nexport const MovieName = styled.h2`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n  font-size: 25px;\n  &:hover {\n    color: orange;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { BASE_URL_IMG } from 'apiService';\nimport {\n  Container,\n  CardWrapper,\n  MovieName,\n  CardImg,\n} from './MoviesList.styled';\n\nconst NO_IMAGE =\n  'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(movie => (\n        <CardWrapper key={movie.id}>\n          <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <CardImg\n              src={movie.poster_path ? BASE_URL_IMG + movie.poster_path : NO_IMAGE}\n              alt={movie.title}\n            />\n            <MovieName>{movie.title}</MovieName>\n          </NavLink>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const SearchbarForm = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  margin-bottom: 10px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n  }`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  border-radius: 5px 0 0 5px;\n  border-color: #3a8095;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMoviesSearchQuery } from 'apiService';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { FcSearch } from 'react-icons/fc';\nimport {\n  SearchbarForm,\n  SearchForm,\n  SearchFormBtn,\n  SearchFormInput,\n} from './Movies.styled';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesList, setMoviesList] = useState([]);\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    if (!searchQuery) {\n      return;\n    }\n\n    getMoviesSearchQuery(searchQuery)\n      .then(setMoviesList)\n      .finally(() => {\n        setLoading(false);\n        setQuery(searchQuery);\n      });\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!query) {\n      toast.error(\n        'Sorry, there are no images matching your search query. Please enter something!',\n        {\n          duration: 4000,\n        }\n      );\n      return;\n    }\n    setLoading(true);\n    setSearchParams({ query });\n  };\n\n  const handleChange = eve => {\n    setQuery(eve.target.value);\n  };\n  return (\n    <>\n      <SearchbarForm>\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchFormInput\n            type=\"text\"\n            name=\"query\"\n            autoComplete=\"off\"\n            placeholder=\"Search...\"\n            value={query}\n            onChange={handleChange}\n          />\n          <SearchFormBtn type=\"submit\">\n            <FcSearch size={40} />\n          </SearchFormBtn>\n        </SearchForm>\n      </SearchbarForm>\n      {isLoading && <Loader />}\n      <MoviesList movies={moviesList} />\n      <Toaster position=\"top-center\" reverseOrder={true} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","BASE_URL_IMG","getTrendingMovies","axios","params","api_key","page","resp","Error","data","results","console","error","toast","getMoviesSearchQuery","query","language","include_adult","getMoviesDetails","movieId","log","getMoviesCast","cast","getMoviesReviews","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Container","styled","CardWrapper","CardImg","MovieName","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","title","SearchbarForm","SearchForm","SearchFormBtn","SearchFormInput","useState","setQuery","isLoading","setLoading","useSearchParams","searchParams","setSearchParams","moviesList","setMoviesList","useEffect","searchQuery","get","then","finally","onSubmit","e","preventDefault","duration","type","name","autoComplete","placeholder","value","onChange","eve","target","size","position","reverseOrder"],"sourceRoot":""}