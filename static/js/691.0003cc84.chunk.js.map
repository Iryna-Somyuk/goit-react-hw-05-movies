{"version":3,"file":"static/js/691.0003cc84.chunk.js","mappings":"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","sources":["apiService.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'e146a7a5146c0f8a3c3cd99167c5b659';\nexport const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w300';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const resp = await axios.get(`${BASE_URL}trending/movie/day?`, {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMoviesSearchQuery = async query => {\n  try {\n    const resp = await axios.get(`${BASE_URL}search/movie?`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-uk',\n        query: `${query}`,\n        page: 1,\n        include_adult: false,\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMoviesDetails = async (movieId) => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${movieId}?`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMoviesCast = async (movieId) => {\n  try {\n    const resp = await axios.get(`${BASE_URL}/movie/${movieId}/credits?`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    if (!resp) {\n      throw new Error();\n    }\n    return resp.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};","import { ColorRing } from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  );\n};","import styled from \"@emotion/styled\";\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 300px);\n  gap: 16px;\n  \n`;\n\nexport const CardWrapper = styled.li`\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const CardImg = styled.img`\n  border-radius: 4px;\n`\n\nexport const MovieName = styled.h2`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n  font-size: 25px;\n  &:hover {\n    color: orange;\n  }\n\n`;","import { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { BASE_URL_IMG } from 'apiService';\nimport { Container, CardWrapper, MovieName, CardImg } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\nconst location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(movie => (\n        <CardWrapper key={movie.id}>\n          <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n          <CardImg src={BASE_URL_IMG + movie.poster_path} alt='' />\n           <MovieName>{movie.title}</MovieName>\n           </NavLink>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n  }`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormBtnlLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMoviesSearchQuery } from 'apiService';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { FcSearch } from 'react-icons/fc';\nimport { SearchForm, SearchFormBtn, SearchFormBtnlLabel, SearchFormInput } from './Movies.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesList, setMoviesList] = useState([]);\n \n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    if (!searchQuery) {\n      return;\n    }\n    getMoviesSearchQuery(searchQuery).then(setMoviesList).finally(()=> {\n      setLoading(false);\n      setQuery(searchQuery)});\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n\n    setSearchParams({ query });\n  };\n\n  const handleChange = eve => {\n    setQuery(eve.target.value);\n  };\n  return (\n    <>\n    {isLoading && <Loader/>}\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormInput type=\"text\" name=\"query\" value={query}onChange={handleChange} />\n        <SearchFormBtn type=\"submit\"><SearchFormBtnlLabel>Search</SearchFormBtnlLabel><FcSearch size={40} /></SearchFormBtn>\n      </SearchForm>\n      <MoviesList movies={moviesList} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","BASE_URL_IMG","getTrendingMovies","axios","params","api_key","page","resp","Error","data","results","console","error","getMoviesSearchQuery","query","language","include_adult","getMoviesDetails","movieId","getMoviesCast","cast","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Container","styled","CardWrapper","CardImg","MovieName","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","title","SearchForm","SearchFormBtn","SearchFormBtnlLabel","SearchFormInput","useState","setQuery","isLoading","setLoading","useSearchParams","searchParams","setSearchParams","moviesList","setMoviesList","useEffect","searchQuery","get","then","finally","onSubmit","e","preventDefault","type","name","value","onChange","eve","target","size"],"sourceRoot":""}